<?php

namespace App\Controller;

use App\Entity\User;
use Dompdf\Dompdf;
use Dompdf\Options;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;

/**
 * @Route("admin/delivery")
 */
class DeliveryController extends Controller
{

    /**
     * @Route("/index", name="delivery_index", methods="GET|POST")
     */
    public function index()
    {

    }

    /**
     * @Route("/generate/{id}", name="delivery_generate", methods="GET|POST")
     */
    public function generate(Request $request, User $user)
    {
        //get the token generated by twig form
        $submitedToken = $request->request->get('token');

        if ($this->isCsrfTokenValid('delivery-generate', $submitedToken)) {


            //get user with only non notified issues from user repository
            $myUser = $this->getDoctrine()->getRepository(User::class)->getNotSendedNotification($user);

            // Configure Dompdf according to your needs
            $pdfOptions = new Options();
            $pdfOptions->set('defaultFont', 'Arial');
            $pdfOptions->set('isRemoteEnabled', TRUE);

            // Instantiate Dompdf with our options
            $dompdf = new Dompdf($pdfOptions);

		$context = stream_context_create([ 
    'ssl' => [ 
        'verify_peer' => FALSE, 
        'verify_peer_name' => FALSE,
        'allow_self_signed'=> TRUE 
    ] 
]);
$dompdf->setHttpContext($context);


        //    $dompdf->setBasePath('/');

            // Retrieve the HTML generated in our twig file
            $html = $this->renderView('admin/delivery/pdf.html.twig', [
                'title' => "Bon de livraison",
                'user' => $myUser,
            ]);

            // Load HTML to Dompdf
            $dompdf->loadHtml($html);

            // (Optional) Setup the paper size and orientation 'portrait' or 'portrait'
            $dompdf->setPaper('A4', 'portrait');

            // Render the HTML as PDF
            $dompdf->render();

            // Output the generated PDF to Browser (inline view)
            $dompdf->stream("mypdf.pdf", [
                "Attachment" => false
            ]);
            exit;
        }

    }

}
